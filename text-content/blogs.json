{
    "blogs": [
        {
            "header": "Thanks for checking in. We're currently working on the website-- please come back later!",
            "author": "Stanley Kwong",
            "team"  : "Webmaster",
            "date"  : ["2014", "6", "1"],
            "text"  : "We appreciate you checking out our website! However, you caught us at a bit of a bad time, because we're remaking the site! It's going to be pretty sweet, and so much better than the last one. So nothing on the website works right now. Sorry!",
            "links" : ["imgs/seniors.jpg", "imgs/stock-banner.jpg"]
        }
      , {
            "header": "Writing Software is not like Building a Car",
            "author": "hexatlas",
            "team"  : "Filco",
            "date"  : ["2014", "5", "4"],
            "text"  : "Building software isn't like building other kinds of things. When you create something — a car, a toy, a chair, a painting, or even digital things like a bitmap or a 3d model — you are producing the end result itself. When you create software, though, you're not creating the end result — you're explaining to a computer how to produce any possible end result given any possible combination of inputs.",
            "links" : []
        }
      , {
            "header": "Ship You a Haskell",
            "author": "thoughtbot",
            "team"  : "Pat Brisbin",
            "date"  : ["2014", "8", "2"],
            "text"  : "Part of this experiment was to develop in Haskell using as much of our normal process as possible. That meant deploying to Heroku. Because a clean compilation of a Haskell application (especially with libraries like Yesod or Pandoc) can take some time, the 15 minute build limit became an issue.",
            "links" : ["imgs/seniors.jpg"]
        }
      , {
            "header": "You Might Not Need jQuery",
            "author": "Anonymouse",
            "team"  : "Angular",
            "date"  : ["2014", "6", "21"],
            "text"  : "jQuery and its cousins are great, and by all means use them if it makes it easier to develop your application. If youre developing a library on the other hand, please take a moment to consider if you actually need jQuery as a dependency. Maybe you can include a few lines of utility code, and forgo the requirement. If youre only targeting more modern browsers, you might not need anything more than what the browser ships with. ",
            "links" : ["imgs/seniors.jpg"]
        }
      , {
            "header": "Managing Your Dotfiles",
            "author": "Anish Athalye",
            "team"  : "C-c C-v",
            "date"  : ["2014", "8", "3"],
            "text"  : "Dotfiles are supposed to contain your personal settings – what works for someone else isnt necessarily optimal for you. If certain configurations worked for everybody, those settings would have been built into programs as defaults. Blindly cloning someone elses dotfiles, especially without having an understanding of how everything works, is not the optimal approach.",
            "links" : ["imgs/frcsv1.jpg"]
        }
      , {
            "header": "I Love Pointers",
            "author": "Gandhi X",
            "team"  : "Ahimsa",
            "date"  : ["2014", "7", "29"],
            "text"  : "Pointers are commonly used to point at the first element in an array. This is necessary when an array type itself cannot be used, such as when the array has dynamic length or as the parameter of a function. The usual array indexing syntax can be applied to the pointer, so it can largely be treated as though it were an array. Using pointers in this way is ambiguous because nothing about the type actually says it's pointing at an element in an array.",
            "links" : ["imgs/seniors.jpg"]
        }
      , {
            "header": "I Love Pointers",
            "author": "Gandhi X",
            "team"  : "Ahimsa",
            "date"  : ["2014", "7", "29"],
            "text"  : "Pointers are commonly used to point at the first element in an array. This is necessary when an array type itself cannot be used, such as when the array has dynamic length or as the parameter of a function. The usual array indexing syntax can be applied to the pointer, so it can largely be treated as though it were an array. Using pointers in this way is ambiguous because nothing about the type actually says it's pointing at an element in an array.",
            "links" : ["imgs/seniors.jpg"]
        }
      , {
            "header": "I Love Pointers",
            "author": "Gandhi X",
            "team"  : "Ahimsa",
            "date"  : ["2014", "7", "29"],
            "text"  : "Pointers are commonly used to point at the first element in an array. This is necessary when an array type itself cannot be used, such as when the array has dynamic length or as the parameter of a function. The usual array indexing syntax can be applied to the pointer, so it can largely be treated as though it were an array. Using pointers in this way is ambiguous because nothing about the type actually says it's pointing at an element in an array.",
            "links" : ["imgs/seniors.jpg"]
        }
      , {
            "header": "I Love Pointers",
            "author": "Gandhi X",
            "team"  : "Ahimsa",
            "date"  : ["2014", "7", "29"],
            "text"  : "Pointers are commonly used to point at the first element in an array. This is necessary when an array type itself cannot be used, such as when the array has dynamic length or as the parameter of a function. The usual array indexing syntax can be applied to the pointer, so it can largely be treated as though it were an array. Using pointers in this way is ambiguous because nothing about the type actually says it's pointing at an element in an array.",
            "links" : ["imgs/seniors.jpg"]
        }
    ],
    
    "members": [
        {
            "name"    : "Leon Cheungbaby",
            "grade"   : "12",
            "team"    : "Programming",
            "portait" : []
        }
      , {
            "name"    : "Maxim Chen",
            "grade"   : "13",
            "team"    : "Unavailable",
            "portait" : []
        }
      , {
            "name"    : "Kyle Cheung",
            "grade"   : "14",
            "team"    : "Bicycling",
            "portait" : []
        }
    ]
}